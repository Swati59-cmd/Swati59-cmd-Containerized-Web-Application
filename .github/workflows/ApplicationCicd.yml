name: Application CI/CD

on:
  push:
    branches: [dev, stage, main]

jobs:
  deploy:
    name: Build, Push to ECR, Deploy to ECS
    runs-on: ubuntu-latest

    env:
      AWS_REGION: us-east-1
      ECR_REPOSITORY: devpython
      ECS_CLUSTER: dev-ecs-cluster
      ECS_SERVICE: dev-service
      ECS_TASK_DEFINITION: dev-app

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set IMAGE_TAG and IMAGE_URI
        run: |
          IMAGE_TAG=${GITHUB_SHA::7}
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
          echo "IMAGE_URI=${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:$IMAGE_TAG" >> $GITHUB_ENV

      - name: Build Docker Image
        run: |
          docker build -t $ECR_REPOSITORY:$IMAGE_TAG .
          docker tag $ECR_REPOSITORY:$IMAGE_TAG $IMAGE_URI

      - name: Push image to ECR
        run: docker push $IMAGE_URI

      - name: Update ECS task definition file
        run: |
          sed "s|<IMAGE_URI>|$IMAGE_URI|g" $ECS_TASK_DEFINITION > updated-taskdef.json

      - name: Deploy to ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: updated-taskdef.json
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true
