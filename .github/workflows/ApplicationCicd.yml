name: Application CI/CD

on:
  push:
    branches: [dev, stage, main]

jobs:
  deploy:
    name: Build, Push to ECR, Deploy via Terraform
    runs-on: ubuntu-latest

    env:
      AWS_REGION: us-east-1
      ECR_REPOSITORY: devpython
      ECS_CLUSTER: dev-ecs-cluster
      ECS_SERVICE: dev-service

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set IMAGE_TAG and IMAGE_URI
        run: |
          IMAGE_TAG=${GITHUB_SHA::7}
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
          echo "IMAGE_URI=${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:$IMAGE_TAG" >> $GITHUB_ENV

      - name: Build Docker Image
        run: |
          docker build -t $ECR_REPOSITORY:$IMAGE_TAG .
          docker tag $ECR_REPOSITORY:$IMAGE_TAG $IMAGE_URI

      - name: Push Docker Image to ECR
        run: docker push $IMAGE_URI

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.0

      - name: Terraform Init
        run: terraform init
        working-directory: ./modules/ECS

      - name: Terraform Plan
        run: terraform plan -var="image=${{ env.IMAGE_URI }}"
        working-directory: ./modules/ECS

      - name: Terraform Apply
        run: terraform apply -auto-approve -var="image=${{ env.IMAGE_URI }}"
        working-directory: ./modules/ECS

     
      - name: Force New ECS Deployment
        run: |
          aws ecs update-service \
            --cluster ${{ env.ECS_CLUSTER }} \
            --service ${{ env.ECS_SERVICE }} \
            --force-new-deployment
