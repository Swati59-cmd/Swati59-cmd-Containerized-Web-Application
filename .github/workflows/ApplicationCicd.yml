name: Deploy App to ECR & Trigger Terraform (Dev)

on:
  push:
    branches:
      - dev

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: us-east-1
  IMAGE_NAME: devpython
  ECR_REPOSITORY: devpython

jobs:
  build-and-push-ecr:
    name: Build & Push Docker Image to ECR
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Source
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: arn:aws:iam::YOUR_AWS_ACCOUNT_ID:role/GitHubApp-role
          role-session-name: github-actions
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Extract Git Short SHA
        id: gitsha
        run: echo "SHORT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Build and Push Docker Image
        run: |
          IMAGE_URI="${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPOSITORY }}:${SHORT_SHA}"
          echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV
          docker build -t $IMAGE_URI .
          docker push $IMAGE_URI

      - name: Trigger Terraform CI/CD
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.REPO_DISPATCH_PAT }}
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: 'YOUR_GITHUB_USERNAME',
              repo: 'terraform-devops-intern',
              workflow_id: 'terraform.yml',
              ref: 'dev',
              inputs: {
                image_url: process.env.IMAGE_URI,
                target_branch: 'dev',
                env_name: 'dev'
              }
            })
