name: Terraform Deployment

on:
  push:
    branches:
      - dev
      - stage
      - main
  workflow_dispatch:
    inputs:
      environment:
        description: "Target environment (dev, stage)"
        required: true
        default: "dev"
      destroy:
        description: "Set to 'true' to destroy infrastructure"
        required: true
        default: "false"

env:
  AWS_REGION: us-east-1
  TF_VERSION: 1.5.7

jobs:
  plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.destroy != 'true' }}

    defaults:
      run:
        working-directory: environments/${{ github.event.inputs.environment || github.ref_name }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan -out=tfplan

      - name: Upload tfplan Artifact
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: environments/${{ github.event.inputs.environment || github.ref_name }}/tfplan

  apply:
    name: Terraform Apply
    runs-on: ubuntu-latest
    needs: plan
    if: ${{ github.event.inputs.destroy != 'true' }}
    environment:
      name: ${{ github.event.inputs.environment || github.ref_name }}

    defaults:
      run:
        working-directory: environments/${{ github.event.inputs.environment || github.ref_name }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Download tfplan Artifact
        uses: actions/download-artifact@v4
        with:
          name: tfplan
          path: environments/${{ github.event.inputs.environment || github.ref_name }}

      - name: Terraform Init
        run: terraform init

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan

  destroy:
    name: Terraform Destroy
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.destroy == 'true' }}

    defaults:
      run:
        working-directory: environments/${{ github.event.inputs.environment || github.ref_name }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform Init
        run: terraform init

      - name: Terraform Destroy
        run: terraform destroy -auto-approve
