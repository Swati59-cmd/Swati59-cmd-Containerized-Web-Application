version: 0.2

env:
  variables:
    AWS_REGION: "us-east-1"

phases:
  install:
    runtime-versions:
      docker: 20
    commands:
      - echo Installing dependencies...

  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - |
        if [[ "$CODEBUILD_INITIATOR" == *"dev"* ]]; then
          REPO_NAME="devpython"
          CONTAINER_NAME="dev-container"
        elif [[ "$CODEBUILD_INITIATOR" == *"stage"* ]]; then
          REPO_NAME="stagepython"
          CONTAINER_NAME="stage-container"
        else
          REPO_NAME="mainpython"
          CONTAINER_NAME="main-container"
        fi
        IMAGE_TAG=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c1-7)
        IMAGE_URI="$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$REPO_NAME:$IMAGE_TAG"
        echo "IMAGE_URI=$IMAGE_URI" >> build.env
        echo "CONTAINER_NAME=$CONTAINER_NAME" >> build.env
        $(aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin "$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com")

  build:
    commands:
      - echo Building the Docker image...
      - source build.env
      - docker build -t $IMAGE_URI .

  post_build:
    commands:
      - echo Pushing the Docker image to ECR...
      - source build.env
      - docker push $IMAGE_URI
      - echo Writing imagedefinitions.json...
      - echo '[{"name":"'"$CONTAINER_NAME"'","imageUri":"'"$IMAGE_URI"'"}]' > imagedefinitions.json

artifacts:
  files:
    - imagedefinitions.json
